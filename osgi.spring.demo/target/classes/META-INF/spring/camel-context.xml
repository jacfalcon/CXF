<?xml version="1.0" encoding="UTF-8"?>
<!-- Configures the Camel Context -->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:camel="http://camel.apache.org/schema/spring"
	xmlns:ctx="http://www.springframework.org/schema/context" xmlns:osgi="http://camel.apache.org/schema/osgi"
	xmlns:osgix="http://www.springframework.org/schema/osgi-compendium"

	xsi:schemaLocation="
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://camel.apache.org/schema/osgi http://camel.apache.org/schema/osgi/camel-osgi.xsd
       http://www.springframework.org/schema/osgi-compendium http://www.springframework.org/schema/osgi-compendium/spring-osgi-compendium.xsd
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

	<bean id="helloBean" class="com.ggl.esb.osgi.HelloBean">
		<property name="say" value="${name.value}" />
	</bean>


	<osgix:cm-properties id="preProps" persistent-id="osgi.spring.demo">

	</osgix:cm-properties>

	<ctx:property-placeholder properties-ref="preProps" />

	<bean id="placeholderConfig"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="file:etc/osgi.spring.demo.cfg" />
	</bean>



	<camel:camelContext xmlns="http://camel.apache.org/schema/spring">
		<!-- here is a sample which processes the input files (leaving them in 
			place - see the 'noop' flag) then performs content based routing on the message 
			using XPath -->
		
		<propertyPlaceholder id="properties" location="file:etc/osgi.spring.demo.cfg" />
			
		<route id="timerToLog">
            <from uri="quartz://myGroup/propLog?cron={{cron.value}}" />
			<setBody>
				<method ref="helloBean" method="hello" />
			</setBody>
			<log message="The message contains ${body} {{activemq.broker.url}}" />
			<to uri="mock:result" />
		</route>
			
			
		<camel:route>
			<camel:from uri="file:src/data?noop=true" />
			<camel:choice>
				<camel:when>
					<camel:xpath>/person/city = 'London'</camel:xpath>
					<camel:log message="UK message" />
					<camel:to uri="file:target/messages/uk" />
				</camel:when>
				<camel:otherwise>
					<camel:log message="Other message" />
					<camel:to uri="file:target/messages/others" />
				</camel:otherwise>
			</camel:choice>
		</camel:route>
		
		
	</camel:camelContext>

</beans>
